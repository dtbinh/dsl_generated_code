simulation s
	role swarm
    rule separation
            close_drones=find_neighbours_in_radius(30)
            dx=sub_all_x(for d in close_drones: self.x - d.x)
            dx=dx/close_drones.length
            dy=sub_all_y(for d in close_drones: self.y - d.y)
            dy=dy/close_drones.length
            sep_vector=[dx,dy]
            result sep_vector
   
    rule cohesion
            close_drones=find_neighbours_in_radius(30)
            sx=sum_all_x(for d in close_drones: self.x + d.x)
            sx=sx/close_drones.length
            sy=sum_all_y(for d in close_drones: self.y + d.y)
            sy=sy/close_drones.length
            cohesion_vec=[sx-position.x,sy-position.y]
            result cohesion_vec
           

    rule velavg
            close_drones=find_neighbours_in_radius(30)
            velx=sum_all_vel_x(for d in close_drones: d.vel_x)
            velx=velx/close_drones.length
            vely=sum_all_vel_x(for d in close_drones: d.vel_y)
            vely=vely/close_drones.length
            vel_vector=[velx,vely]
            result vel_vector
           
    behavior flocking
            flocking_vec=separation()+cohesion()+velavg()
            set_velocity flocking_vec
	
	role fire_locator move flocking
		condition temperature_sensor=True
		behavior find_fire
			if temperature_sensor()>100:
				fire=self.position:
		behavior propagate_fire_position -args fire
			propagate fire to_role fire_fighters 
		behavior tend_away_from_fire -args fire
			target=self.position - fire
			target=-1*target
        	set_velocity target
	
	
	role fire_fighters	move flocking  
        condition water_cargo=True
        behavior go_to_fire_location -args fire 
        	target=self.position - fire
        	set_velocity target       	 
        behavior turn_down_fire
        	
    
    ensemble fire_handler
    	share estinguish_fire
    	requires fire_locator fire_fighters
        
    sequence estinguish_fire
		state s1 role fire_locator action find_fire;
		state s2 role fire_locator action propagate_fire_position;
		state s3 role fire_fighters action go_to_fire_location;
		state s4 role fire_locator action tend_away_from_fire;
		state s5 role fire_fighters action turn_down_fire;
	


            
